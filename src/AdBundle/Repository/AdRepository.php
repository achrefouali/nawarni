<?php

namespace AdBundle\Repository;


/**
 * AdRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
use Symfony\Component\Serializer\Normalizer\DataUriNormalizer;
class AdRepository extends \Doctrine\ORM\EntityRepository
{


    /**
     * findRecordsByFilter
     * This function allow to find filter
     * @param $filter
     * @param string $sort
     * @param string $orderBy
     * @param bool $paginator
     * @return array|\Doctrine\ORM\Query
     */
    public function findRecordsByFilter($filter, $paginator = false, $sort = 'id', $orderBy = 'DESC')
    {

        $queryBuilder = $this->createQueryBuilder('c');
        $queryBuilder->select('c');



        if ((isset($filter['title']) && !empty($filter['title']))) {
            $queryBuilder->andWhere('c.title LIKE  :title')->setParameter('title', '%' . $filter['title'] . '%');
        }

        if ((isset($filter['public']) && !is_null($filter['public']))) {

            $queryBuilder->andWhere('c.public =  :public')->setParameter('public',$filter['public'] );
        }

        if ((isset($filter['adCategory']) && !empty($filter['adCategory']))) {
            $queryBuilder->andWhere('c.adCategory  IN (:adCategory)')->setParameter('adCategory', $filter['adCategory']);
        }
        $queryBuilder->orderBy('c.'.$sort, $orderBy);

        if($paginator == false){
            $result =  $queryBuilder->getQuery()->getResult();
        }else{
            $result =  $queryBuilder->getQuery();
        }


        return ['total_result' => count($queryBuilder->getQuery()->getResult()) , 'result' => $result];
    }


     public function   findRecords($variable){
        extract($variable);

         $queryBuilder = $this->createQueryBuilder('c');
         $queryBuilder->select('c');
         $queryBuilder->andWhere('c.public = :public');
         $queryBuilder->setParameter('public',1);
         $queryBuilder->orderBy('c.id','DESC');


         $normalizer = new DataUriNormalizer();
         $result=[];
         foreach($queryBuilder->getQuery()->getResult() as $imte){

             $file= $normalizer->normalize(new \SplFileObject($imte->getUploadRootDir() . '/' .$imte->getAnnonceFile()));
             $result[]=['id'=>$imte->getId(),
                                      'title'=>$imte->getTitle(),
                                      'description'=>$imte->getDescription(),
                                      'date'=>$imte->getDate()->format('Y-m-d'),
                                      'category'=>$imte->getAdCategory()->getTitle(),
                                      'affiche'=>$file];
         }
         if(!is_null($offset) && !is_null($limit) ){
             $result =array_slice(array_values(array_intersect_key($result, array_unique(array_column($result, 'id')))), $offset, $limit);
         }



         return ['total_result' => count($result) , 'result' => $result];
     }
}
